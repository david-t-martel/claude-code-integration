{
  "permissions": {
    "allow": [
      "mcp__desktop-commander-wsl__list_directory",
      "mcp__desktop-commander-wsl__read_file",
      "Bash(ls:*)",
      "Bash(echo $WSLENV)",
      "WebFetch(domain:cloud.google.com)",
      "WebFetch(domain:cloud.google.com)",
      "mcp__desktop-commander-wsl__write_file",
      "mcp__desktop-commander-wsl__edit_block",
      "WebFetch(domain:ai.google.dev)",
      "mcp__Context7__resolve-library-id",
      "mcp__Context7__get-library-docs",
      "mcp__desktop-commander-wsl__read_multiple_files",
      "mcp__desktop-commander-wsl__search_files",
      "Bash(rm:*)",
      "mcp__desktop-commander-wsl__create_directory",
      "mcp__desktop-commander-wsl__execute_command",
      "mcp__desktop-commander-wsl__read_output",
      "Bash(chmod:*)",
      "Bash(mkdir:*)",
      "Bash(ln:*)",
      "Bash(cp:*)",
      "Bash(source ~/.bashrc)",
      "Bash(source:*)",
      "Bash(gcp-profile:*)",
      "Bash(bash:*)",
      "Bash(. /home/david/.gcp/scripts/gcp-profile-switch.sh)",
      "Bash(cat:*)",
      "Bash(find:*)",
      "Bash(tree:*)",
      "Bash(fd:*)",
      "Bash(jq:*)",
      "Bash(echo:*)",
      "Bash(test:*)",
      "Bash(/home/david/.local/bin/rust-fs:*)",
      "Bash(rg:*)",
      "mcp__desktop-commander-wsl__get_config",
      "mcp__sequential-thinking-wsl__sequentialthinking",
      "mcp__desktop-commander-wsl__set_config_value",
      "Bash(gemini:*)",
      "mcp__wsl-filesystem-wsl__read_file",
      "mcp__wsl-filesystem-wsl__get_file_info",
      "mcp__wsl-filesystem-wsl__list_directory",
      "mcp__desktop-commander-wsl__force_terminate",
      "mcp__desktop-commander-wsl__search_code",
      "Bash(timeout:*)",
      "Bash(/home/david/.local/bin/rust-fetch:*)",
      "Bash(/home/david/.local/bin/rust-link:*)",
      "Bash(mv:*)",
      "mcp__wsl-filesystem-wsl__create_directory",
      "mcp__wsl-filesystem-wsl__move_file",
      "Bash(true)",
      "mcp__wsl-filesystem-wsl__edit_file",
      "mcp__wsl-filesystem-wsl__write_file",
      "mcp__wsl-filesystem-wsl__directory_tree",
      "mcp__wsl-filesystem-wsl__search_files",
      "mcp__desktop-commander-wsl__move_file",
      "Bash(grep:*)",
      "Bash(for:*)",
      "Bash(do sed -i 's/from gemini_agents\\.core import/from gemini_agents import/g' \"$file\")",
      "Bash(done)",
      "Bash(touch:*)",
      "Bash(gh auth:*)",
      "Bash(git init:*)",
      "Bash(gh repo create:*)",
      "Bash(git remote add:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(git pull:*)",
      "Bash(git rebase:*)",
      "Bash(uv pip install:*)",
      "Bash(python:*)",
      "Bash(uv run:*)",
      "Bash(./gemini-custom --help)",
      "Bash(./gemini-custom workspace . --comprehensive)",
      "mcp__wsl-filesystem-wsl__list_allowed_directories",
      "mcp__wsl-filesystem-wsl__read_multiple_files",
      "Bash(powershell.exe:*)",
      "Bash(/mnt/c/Windows/System32/WindowsPowerShell/v1.0/powershell.exe -ExecutionPolicy Bypass -File Test-PowerShellGcpIntegration.ps1)",
      "Bash(/mnt/c/Windows/System32/WindowsPowerShell/v1.0/powershell.exe -ExecutionPolicy Bypass -File Test-GcpProfile-Simple.ps1)",
      "Bash(pwsh:*)",
      "Bash(powershell:*)",
      "Bash(diff:*)",
      "Bash(/home/david/.gcp/scripts/finalize-auth-integration.sh:*)",
      "Bash(/mnt/c/Windows/System32/WindowsPowerShell/v1.0/powershell.exe -ExecutionPolicy Bypass -File test-wslenv-fix.ps1)",
      "Bash(/mnt/c/Windows/System32/WindowsPowerShell/v1.0/powershell.exe -ExecutionPolicy Bypass -File validate-wslenv-fixes.ps1)",
      "mcp__desktop-commander-wsl__get_file_info",
      "Bash(jdupes:*)",
      "Bash(/home/david/final-google-auth-cleanup.sh:*)",
      "Bash(claude mcp:*)",
      "Bash(npx @modelcontextprotocol/inspector:*)",
      "Bash(mcp-inspector:*)",
      "Bash(npm install:*)",
      "Bash(claude:*)",
      "Bash(export RUST_LOG=debug)",
      "Bash(/home/david/projects/mcp/rust-fs/bin/rust-fs --version)",
      "Bash(/home/david/projects/mcp/rust-fs/bin/rust-fetch --version)",
      "Bash(/home/david/projects/mcp/rust-fs/bin/rust-link --version)"
    ],
    "deny": []
  }
}